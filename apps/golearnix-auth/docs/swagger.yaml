definitions:
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  request.RegisterRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 100
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
      role:
        enum:
          - admin
          - instructor
          - student
        type: string
    required:
      - email
      - name
      - password
      - role
    type: object
  response.Response:
    properties:
      data: { }
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: { }
paths:
  /api/v1/auth/delete:
    delete:
      consumes:
        - application/json
      description: Borra al usuario autenticado y todas sus sesiones.
      produces:
        - application/json
      responses:
        "200":
          description: Usuario eliminado exitosamente
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: No autorizado
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/response.Response'
      security:
        - BearerAuth: [ ]
      summary: Eliminar cuenta de usuario
      tags:
        - User
  /api/v1/auth/login:
    post:
      consumes:
        - application/json
      description: Valida credenciales y devuelve un JWT válido por 24h.
      parameters:
        - description: Email y contraseña
          in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/request.LoginRequest'
      produces:
        - application/json
      responses:
        "200":
          description: Inicio de sesión exitoso
          schema:
            allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  data:
                    additionalProperties:
                      type: string
                    type: object
                type: object
        "400":
          description: Credenciales inválidas
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Credenciales incorrectas
          schema:
            $ref: '#/definitions/response.Response'
      summary: Iniciar sesión de usuario
      tags:
        - Auth
  /api/v1/auth/logout:
    post:
      consumes:
        - application/json
      description: Invalida el JWT actual eliminando la sesión en BD.
      produces:
        - application/json
      responses:
        "200":
          description: Sesión cerrada exitosamente
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Token no proporcionado o inválido
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Error interno al cerrar sesión
          schema:
            $ref: '#/definitions/response.Response'
      security:
        - BearerAuth: [ ]
      summary: Cerrar sesión
      tags:
        - Auth
  /api/v1/auth/me:
    get:
      consumes:
        - application/json
      description: Devuelve los datos del usuario autenticado.
      produces:
        - application/json
      responses:
        "200":
          description: Información del usuario
          schema:
            allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  data:
                    additionalProperties: true
                    type: object
                type: object
        "401":
          description: No autorizado
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/response.Response'
      security:
        - BearerAuth: [ ]
      summary: Obtener información del usuario actual
      tags:
        - User
  /api/v1/auth/register:
    post:
      consumes:
        - application/json
      description: Crea un usuario con nombre, email, contraseña y rol.
      parameters:
        - description: Datos de registro
          in: body
          name: payload
          required: true
          schema:
            $ref: '#/definitions/request.RegisterRequest'
      produces:
        - application/json
      responses:
        "201":
          description: Usuario registrado exitosamente
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Datos inválidos
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Email ya registrado
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/response.Response'
      summary: Registrar un nuevo usuario
      tags:
        - Auth
  /api/v1/auth/validate:
    get:
      consumes:
        - application/json
      description: Comprueba que el token está activo y devuelve email y tiempo restante.
      produces:
        - application/json
      responses:
        "200":
          description: Token válido
          schema:
            allOf:
              - $ref: '#/definitions/response.Response'
              - properties:
                  data:
                    additionalProperties:
                      type: string
                    type: object
                type: object
        "401":
          description: Token inválido o expirado
          schema:
            $ref: '#/definitions/response.Response'
      security:
        - BearerAuth: [ ]
      summary: Validar token JWT
      tags:
        - Auth
securityDefinitions:
  BearerAuth:
    description: 'Token JWT en formato Bearer. Ejemplo: "Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
